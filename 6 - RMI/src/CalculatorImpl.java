import java.rmi.server.UnicastRemoteObject;
import java.rmi.RemoteException;

// ðŸ”µ Classe que implementa a lÃ³gica da interface remota
public class CalculatorImpl extends UnicastRemoteObject implements Calculator {

    // ðŸ”¹ Construtor: deve lanÃ§ar RemoteException para permitir a exportaÃ§Ã£o automÃ¡tica
    protected CalculatorImpl() throws RemoteException {
        super(); // ðŸ”µ exporta o objeto para que ele aceite chamadas remotas
    }

    // ðŸ”µ MÃ©todos remotos reais, que fazem os cÃ¡lculos
    @Override
    public int add(int a, int b) throws RemoteException {
        return a + b;
    }

    @Override
    public int sub(int a, int b) throws RemoteException {
        return a - b;
    }

    @Override
    public int mul(int a, int b) throws RemoteException {
        return a * b;
    }

    @Override
    public int div(int a, int b) throws RemoteException {
        if (b == 0) throw new ArithmeticException("DivisÃ£o por zero");
        return a / b;
    }
}
